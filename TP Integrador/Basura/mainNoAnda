# main.py
import pygame
from pokemon import Pokemon

# Inicialización de Pygame
pygame.init()

# Dimensiones de la ventana
WIDTH, HEIGHT = 800, 600
WINDOW = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Combate Pokémon")

# Colores
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)

# Cargar imágenes
bg_image = pygame.image.load('assets/background.png')  # Asegúrate de tener una imagen de fondo
pikachu_image = pygame.image.load('assets/pikachu.png')  # Imagen de Pikachu
bulbasaur_image = pygame.image.load('assets/bulbasaur.png')  # Imagen de Bulbasaur

# Crear Pokémon
pikachu = Pokemon("Pikachu", 100, 20)
bulbasaur = Pokemon("Bulbasaur", 100, 15)

pokemons = [pikachu, bulbasaur]
current_selection = 0

# Función para mostrar el texto
def draw_text(text, size, x, y):
    font = pygame.font.Font(None, size)
    text_surface = font.render(text, True, BLACK)
    WINDOW.blit(text_surface, (x, y))

# Función para el menú principal
def main_menu():
    global current_selection
    running = True
    while running:
        WINDOW.fill(WHITE)
        WINDOW.blit(bg_image, (0, 0))
        draw_text("Elige tu Pokémon", 60, 250, 50)

        # Mostrar Pokémon
        for i, pokemon in enumerate(pokemons):
            draw_text(pokemon.name, 40, 250, 200 + i * 100)
            if current_selection == i:
                # Resaltar la selección actual
                pygame.draw.rect(WINDOW, BLACK, (240, 190 + i * 100, 300, 50), 2)
                if pokemon.name == "Pikachu":
                    WINDOW.blit(pikachu_image, (600, 200))
                else:
                    WINDOW.blit(bulbasaur_image, (600, 200))

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_DOWN:
                    current_selection = (current_selection + 1) % len(pokemons)
                elif event.key == pygame.K_UP:
                    current_selection = (current_selection - 1) % len(pokemons)
                elif event.key == pygame.K_RETURN:
                    return pokemons[current_selection]  # Devolver el Pokémon seleccionado

        pygame.display.update()

# Función principal del juego
def battle(current_pokemon, enemy_pokemon):
    turn = 'player'
    running = True
    while running:
        WINDOW.fill(WHITE)
        WINDOW.blit(bg_image, (0, 0))

        # Mostrar información de los Pokémon
        draw_text(f"{current_pokemon.name} HP: {current_pokemon.health}", 40, 50, 50)
        draw_text(f"{enemy_pokemon.name} HP: {enemy_pokemon.health}", 40, 50, 100)

        # Dibujar Pokémon
        if current_pokemon.name == "Pikachu":
            WINDOW.blit(pikachu_image, (100, 200))  # Coordenadas de Pikachu
            WINDOW.blit(bulbasaur_image, (500, 200))  # Coordenadas de Bulbasaur
        else:
            WINDOW.blit(bulbasaur_image, (100, 200))  # Coordenadas de Bulbasaur
            WINDOW.blit(pikachu_image, (500, 200))  # Coordenadas de Pikachu

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE and turn == 'player':
                    damage = current_pokemon.attack(enemy_pokemon)
                    print(f"{current_pokemon.name} atacó a {enemy_pokemon.name} causando {current_pokemon.attack_power} de daño.")
                    print(f"{enemy_pokemon.name} ahora tiene {damage} HP.")
                    turn = 'enemy'

                # Turno del enemigo
                if turn == 'enemy':
                    damage = enemy_pokemon.attack(current_pokemon)
                    print(f"{enemy_pokemon.name} atacó a {current_pokemon.name} causando {enemy_pokemon.attack_power} de daño.")
                    print(f"{current_pokemon.name} ahora tiene {damage} HP.")
                    turn = 'player'

        pygame.display.update()
        # Comprobar si alguno de los Pokémon ha sido derrotado
        if current_pokemon.health <= 0 or enemy_pokemon.health <= 0:
            running = False

    # Mostrar ganador
    if current_pokemon.health > 0:
        draw_text(f"{current_pokemon.name} ha ganado!", 60, 250, 250)
    else:
        draw_text(f"{enemy_pokemon.name} ha ganado!", 60, 250, 250)
    
    pygame.display.update()
    pygame.time.wait(2000)  # Esperar 2 segundos para ver el resultado

if __name__ == "__main__":
    selected_pokemon = main_menu()  # Mostrar el menú principal y obtener el Pokémon seleccionado
    enemy_pokemon = bulbasaur if selected_pokemon == pikachu else pikachu
    battle(selected_pokemon, enemy_pokemon)  # Iniciar la batalla
    pygame.quit()
